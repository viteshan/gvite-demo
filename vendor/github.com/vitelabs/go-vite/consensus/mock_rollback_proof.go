// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/vitelabs/go-vite/consensus (interfaces: RollbackProof)

// Package consensus is a generated GoMock package.
package consensus

import (
	gomock "github.com/golang/mock/gomock"
	types "github.com/vitelabs/go-vite/common/types"
	ledger "github.com/vitelabs/go-vite/ledger"
	reflect "reflect"
	time "time"
)

// MockRollbackProof is a mock of RollbackProof interface
type MockRollbackProof struct {
	ctrl     *gomock.Controller
	recorder *MockRollbackProofMockRecorder
}

// MockRollbackProofMockRecorder is the mock recorder for MockRollbackProof
type MockRollbackProofMockRecorder struct {
	mock *MockRollbackProof
}

// NewMockRollbackProof creates a new mock instance
func NewMockRollbackProof(ctrl *gomock.Controller) *MockRollbackProof {
	mock := &MockRollbackProof{ctrl: ctrl}
	mock.recorder = &MockRollbackProofMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRollbackProof) EXPECT() *MockRollbackProofMockRecorder {
	return m.recorder
}

// Proof mocks base method
func (m *MockRollbackProof) Proof(arg0 types.Hash, arg1 time.Time) (*ledger.SnapshotBlock, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Proof", arg0, arg1)
	ret0, _ := ret[0].(*ledger.SnapshotBlock)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Proof indicates an expected call of Proof
func (mr *MockRollbackProofMockRecorder) Proof(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Proof", reflect.TypeOf((*MockRollbackProof)(nil).Proof), arg0, arg1)
}

// ProofEmpty mocks base method
func (m *MockRollbackProof) ProofEmpty(arg0, arg1 time.Time) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ProofEmpty", arg0, arg1)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ProofEmpty indicates an expected call of ProofEmpty
func (mr *MockRollbackProofMockRecorder) ProofEmpty(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProofEmpty", reflect.TypeOf((*MockRollbackProof)(nil).ProofEmpty), arg0, arg1)
}

// ProofHash mocks base method
func (m *MockRollbackProof) ProofHash(arg0 time.Time) (types.Hash, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ProofHash", arg0)
	ret0, _ := ret[0].(types.Hash)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ProofHash indicates an expected call of ProofHash
func (mr *MockRollbackProofMockRecorder) ProofHash(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProofHash", reflect.TypeOf((*MockRollbackProof)(nil).ProofHash), arg0)
}
