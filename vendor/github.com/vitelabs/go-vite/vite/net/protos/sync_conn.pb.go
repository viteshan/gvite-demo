// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sync_conn.proto

package protos

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SyncConnHandshake struct {
	Key                  []byte   `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	Timestamp            int64    `protobuf:"varint,2,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Sign                 []byte   `protobuf:"bytes,3,opt,name=Sign,proto3" json:"Sign,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncConnHandshake) Reset()         { *m = SyncConnHandshake{} }
func (m *SyncConnHandshake) String() string { return proto.CompactTextString(m) }
func (*SyncConnHandshake) ProtoMessage()    {}
func (*SyncConnHandshake) Descriptor() ([]byte, []int) {
	return fileDescriptor_5fbe6f444808d091, []int{0}
}

func (m *SyncConnHandshake) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncConnHandshake.Unmarshal(m, b)
}
func (m *SyncConnHandshake) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncConnHandshake.Marshal(b, m, deterministic)
}
func (m *SyncConnHandshake) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncConnHandshake.Merge(m, src)
}
func (m *SyncConnHandshake) XXX_Size() int {
	return xxx_messageInfo_SyncConnHandshake.Size(m)
}
func (m *SyncConnHandshake) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncConnHandshake.DiscardUnknown(m)
}

var xxx_messageInfo_SyncConnHandshake proto.InternalMessageInfo

func (m *SyncConnHandshake) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *SyncConnHandshake) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *SyncConnHandshake) GetSign() []byte {
	if m != nil {
		return m.Sign
	}
	return nil
}

type ChunkRequest struct {
	From                 uint64   `protobuf:"varint,1,opt,name=From,proto3" json:"From,omitempty"`
	To                   uint64   `protobuf:"varint,2,opt,name=To,proto3" json:"To,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChunkRequest) Reset()         { *m = ChunkRequest{} }
func (m *ChunkRequest) String() string { return proto.CompactTextString(m) }
func (*ChunkRequest) ProtoMessage()    {}
func (*ChunkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5fbe6f444808d091, []int{1}
}

func (m *ChunkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChunkRequest.Unmarshal(m, b)
}
func (m *ChunkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChunkRequest.Marshal(b, m, deterministic)
}
func (m *ChunkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChunkRequest.Merge(m, src)
}
func (m *ChunkRequest) XXX_Size() int {
	return xxx_messageInfo_ChunkRequest.Size(m)
}
func (m *ChunkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChunkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChunkRequest proto.InternalMessageInfo

func (m *ChunkRequest) GetFrom() uint64 {
	if m != nil {
		return m.From
	}
	return 0
}

func (m *ChunkRequest) GetTo() uint64 {
	if m != nil {
		return m.To
	}
	return 0
}

type ChunkInfo struct {
	From                 uint64   `protobuf:"varint,1,opt,name=From,proto3" json:"From,omitempty"`
	To                   uint64   `protobuf:"varint,2,opt,name=To,proto3" json:"To,omitempty"`
	Size                 uint64   `protobuf:"varint,3,opt,name=Size,proto3" json:"Size,omitempty"`
	PrevHash             []byte   `protobuf:"bytes,4,opt,name=PrevHash,proto3" json:"PrevHash,omitempty"`
	EndHash              []byte   `protobuf:"bytes,5,opt,name=EndHash,proto3" json:"EndHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChunkInfo) Reset()         { *m = ChunkInfo{} }
func (m *ChunkInfo) String() string { return proto.CompactTextString(m) }
func (*ChunkInfo) ProtoMessage()    {}
func (*ChunkInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_5fbe6f444808d091, []int{2}
}

func (m *ChunkInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChunkInfo.Unmarshal(m, b)
}
func (m *ChunkInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChunkInfo.Marshal(b, m, deterministic)
}
func (m *ChunkInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChunkInfo.Merge(m, src)
}
func (m *ChunkInfo) XXX_Size() int {
	return xxx_messageInfo_ChunkInfo.Size(m)
}
func (m *ChunkInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ChunkInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ChunkInfo proto.InternalMessageInfo

func (m *ChunkInfo) GetFrom() uint64 {
	if m != nil {
		return m.From
	}
	return 0
}

func (m *ChunkInfo) GetTo() uint64 {
	if m != nil {
		return m.To
	}
	return 0
}

func (m *ChunkInfo) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *ChunkInfo) GetPrevHash() []byte {
	if m != nil {
		return m.PrevHash
	}
	return nil
}

func (m *ChunkInfo) GetEndHash() []byte {
	if m != nil {
		return m.EndHash
	}
	return nil
}

func init() {
	proto.RegisterType((*SyncConnHandshake)(nil), "protos.SyncConnHandshake")
	proto.RegisterType((*ChunkRequest)(nil), "protos.ChunkRequest")
	proto.RegisterType((*ChunkInfo)(nil), "protos.ChunkInfo")
}

func init() { proto.RegisterFile("sync_conn.proto", fileDescriptor_5fbe6f444808d091) }

var fileDescriptor_5fbe6f444808d091 = []byte{
	// 217 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x90, 0x4f, 0x4f, 0x84, 0x30,
	0x10, 0xc5, 0x03, 0xd4, 0x3f, 0x3b, 0xd9, 0xf8, 0x67, 0x4e, 0x8d, 0xf1, 0xb0, 0xe1, 0xb4, 0x27,
	0x0f, 0xfa, 0x11, 0x88, 0x06, 0xe3, 0xc5, 0x14, 0x12, 0x8f, 0xa6, 0x42, 0x15, 0x42, 0x98, 0x41,
	0x0a, 0x26, 0xf5, 0xd3, 0x1b, 0x86, 0xa8, 0xd7, 0x3d, 0xf5, 0x37, 0x7d, 0x7d, 0xef, 0x35, 0x03,
	0xe7, 0x3e, 0x50, 0xf5, 0x5a, 0x31, 0xd1, 0xcd, 0x30, 0xf2, 0xc4, 0x78, 0x2c, 0x87, 0x4f, 0x5f,
	0xe0, 0xb2, 0x08, 0x54, 0x65, 0x4c, 0x94, 0x5b, 0xaa, 0x7d, 0x63, 0x3b, 0x87, 0x17, 0x90, 0x3c,
	0xb9, 0xa0, 0xa3, 0x5d, 0xb4, 0xdf, 0x9a, 0x05, 0xf1, 0x1a, 0x36, 0x65, 0xdb, 0x3b, 0x3f, 0xd9,
	0x7e, 0xd0, 0xf1, 0x2e, 0xda, 0x27, 0xe6, 0xff, 0x02, 0x11, 0x54, 0xd1, 0x7e, 0x90, 0x4e, 0xc4,
	0x20, 0x9c, 0xde, 0xc2, 0x36, 0x6b, 0x66, 0xea, 0x8c, 0xfb, 0x9c, 0x9d, 0x9f, 0x96, 0x37, 0x0f,
	0x23, 0xf7, 0x12, 0xaa, 0x8c, 0x30, 0x9e, 0x41, 0x5c, 0xb2, 0xc4, 0x29, 0x13, 0x97, 0x9c, 0x06,
	0xd8, 0x88, 0xe7, 0x91, 0xde, 0xf9, 0x10, 0xc3, 0x5a, 0xfc, 0xed, 0xa4, 0x58, 0x19, 0x61, 0xbc,
	0x82, 0xd3, 0xe7, 0xd1, 0x7d, 0xe5, 0xd6, 0x37, 0x5a, 0xc9, 0x87, 0xfe, 0x66, 0xd4, 0x70, 0x72,
	0x4f, 0xb5, 0x48, 0x47, 0x22, 0xfd, 0x8e, 0x6f, 0xeb, 0x3e, 0xee, 0x7e, 0x02, 0x00, 0x00, 0xff,
	0xff, 0xc5, 0x0f, 0x3f, 0xe5, 0x29, 0x01, 0x00, 0x00,
}
