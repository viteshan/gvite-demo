// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vitepb/consensus_point.proto

package vitepb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PointVoteContent struct {
	VoteCnt              []byte   `protobuf:"bytes,1,opt,name=voteCnt,proto3" json:"voteCnt,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PointVoteContent) Reset()         { *m = PointVoteContent{} }
func (m *PointVoteContent) String() string { return proto.CompactTextString(m) }
func (*PointVoteContent) ProtoMessage()    {}
func (*PointVoteContent) Descriptor() ([]byte, []int) {
	return fileDescriptor_88e96154ef7983e8, []int{0}
}

func (m *PointVoteContent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PointVoteContent.Unmarshal(m, b)
}
func (m *PointVoteContent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PointVoteContent.Marshal(b, m, deterministic)
}
func (m *PointVoteContent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PointVoteContent.Merge(m, src)
}
func (m *PointVoteContent) XXX_Size() int {
	return xxx_messageInfo_PointVoteContent.Size(m)
}
func (m *PointVoteContent) XXX_DiscardUnknown() {
	xxx_messageInfo_PointVoteContent.DiscardUnknown(m)
}

var xxx_messageInfo_PointVoteContent proto.InternalMessageInfo

func (m *PointVoteContent) GetVoteCnt() []byte {
	if m != nil {
		return m.VoteCnt
	}
	return nil
}

func (m *PointVoteContent) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type PointContent struct {
	Address              []byte   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	FNum                 uint32   `protobuf:"fixed32,2,opt,name=fNum,proto3" json:"fNum,omitempty"`
	ENum                 uint32   `protobuf:"fixed32,3,opt,name=eNum,proto3" json:"eNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PointContent) Reset()         { *m = PointContent{} }
func (m *PointContent) String() string { return proto.CompactTextString(m) }
func (*PointContent) ProtoMessage()    {}
func (*PointContent) Descriptor() ([]byte, []int) {
	return fileDescriptor_88e96154ef7983e8, []int{1}
}

func (m *PointContent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PointContent.Unmarshal(m, b)
}
func (m *PointContent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PointContent.Marshal(b, m, deterministic)
}
func (m *PointContent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PointContent.Merge(m, src)
}
func (m *PointContent) XXX_Size() int {
	return xxx_messageInfo_PointContent.Size(m)
}
func (m *PointContent) XXX_DiscardUnknown() {
	xxx_messageInfo_PointContent.DiscardUnknown(m)
}

var xxx_messageInfo_PointContent proto.InternalMessageInfo

func (m *PointContent) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *PointContent) GetFNum() uint32 {
	if m != nil {
		return m.FNum
	}
	return 0
}

func (m *PointContent) GetENum() uint32 {
	if m != nil {
		return m.ENum
	}
	return 0
}

type ConsensusPoint struct {
	PrevHash             []byte              `protobuf:"bytes,1,opt,name=prevHash,proto3" json:"prevHash,omitempty"`
	Hash                 []byte              `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	Contents             []*PointContent     `protobuf:"bytes,7,rep,name=contents,proto3" json:"contents,omitempty"`
	Votes                []*PointVoteContent `protobuf:"bytes,8,rep,name=votes,proto3" json:"votes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ConsensusPoint) Reset()         { *m = ConsensusPoint{} }
func (m *ConsensusPoint) String() string { return proto.CompactTextString(m) }
func (*ConsensusPoint) ProtoMessage()    {}
func (*ConsensusPoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_88e96154ef7983e8, []int{2}
}

func (m *ConsensusPoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsensusPoint.Unmarshal(m, b)
}
func (m *ConsensusPoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsensusPoint.Marshal(b, m, deterministic)
}
func (m *ConsensusPoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusPoint.Merge(m, src)
}
func (m *ConsensusPoint) XXX_Size() int {
	return xxx_messageInfo_ConsensusPoint.Size(m)
}
func (m *ConsensusPoint) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusPoint.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusPoint proto.InternalMessageInfo

func (m *ConsensusPoint) GetPrevHash() []byte {
	if m != nil {
		return m.PrevHash
	}
	return nil
}

func (m *ConsensusPoint) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *ConsensusPoint) GetContents() []*PointContent {
	if m != nil {
		return m.Contents
	}
	return nil
}

func (m *ConsensusPoint) GetVotes() []*PointVoteContent {
	if m != nil {
		return m.Votes
	}
	return nil
}

func init() {
	proto.RegisterType((*PointVoteContent)(nil), "vitepb.PointVoteContent")
	proto.RegisterType((*PointContent)(nil), "vitepb.PointContent")
	proto.RegisterType((*ConsensusPoint)(nil), "vitepb.ConsensusPoint")
}

func init() { proto.RegisterFile("vitepb/consensus_point.proto", fileDescriptor_88e96154ef7983e8) }

var fileDescriptor_88e96154ef7983e8 = []byte{
	// 233 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x50, 0xb1, 0x4e, 0xc3, 0x30,
	0x14, 0x94, 0x5b, 0x68, 0xc2, 0xa3, 0x42, 0xc8, 0x62, 0xb0, 0x10, 0x43, 0x94, 0x29, 0x93, 0x41,
	0xf0, 0x03, 0x48, 0x5d, 0x98, 0x50, 0xe5, 0x81, 0x15, 0xa5, 0xed, 0x43, 0xed, 0x50, 0xdb, 0xca,
	0x73, 0xf3, 0x41, 0x7c, 0x29, 0x7a, 0xcf, 0x49, 0x14, 0xb6, 0xbb, 0xf3, 0xdd, 0xe9, 0xfc, 0xe0,
	0xa9, 0x3f, 0x25, 0x8c, 0xbb, 0xe7, 0x7d, 0xf0, 0x84, 0x9e, 0x2e, 0xf4, 0x1d, 0xc3, 0xc9, 0x27,
	0x1b, 0xbb, 0x90, 0x82, 0x5e, 0xe5, 0xd7, 0xfa, 0x1d, 0xee, 0xb7, 0x2c, 0x7f, 0x85, 0x84, 0x9b,
	0xe0, 0x13, 0xfa, 0xa4, 0x0d, 0x14, 0x3d, 0x53, 0x9f, 0x8c, 0xaa, 0x54, 0xb3, 0x76, 0x23, 0xd5,
	0x1a, 0xae, 0x7c, 0x7b, 0x46, 0xb3, 0xa8, 0x54, 0x73, 0xe3, 0x04, 0xd7, 0x5b, 0x58, 0x4b, 0xc3,
	0x2c, 0xdd, 0x1e, 0x0e, 0x1d, 0x12, 0x8d, 0xe9, 0x81, 0x72, 0xfa, 0xe7, 0xf3, 0x72, 0x96, 0x74,
	0xe1, 0x04, 0xb3, 0x86, 0xac, 0x2d, 0xb3, 0xc6, 0xb8, 0xfe, 0x55, 0x70, 0xb7, 0x19, 0x57, 0x4b,
	0xb7, 0x7e, 0x84, 0x32, 0x76, 0xd8, 0x7f, 0xb4, 0x74, 0x1c, 0x5a, 0x27, 0xce, 0x15, 0x47, 0xd6,
	0x17, 0xa2, 0x0b, 0xd6, 0x2f, 0x50, 0xee, 0xf3, 0x1e, 0x32, 0x45, 0xb5, 0x6c, 0x6e, 0x5f, 0x1f,
	0x6c, 0xfe, 0xb1, 0x9d, 0x8f, 0x75, 0x93, 0x4b, 0x5b, 0xb8, 0xe6, 0x5f, 0x92, 0x29, 0xc5, 0x6e,
	0xfe, 0xd9, 0x67, 0xd7, 0x71, 0xd9, 0xb6, 0x5b, 0xc9, 0x1d, 0xdf, 0xfe, 0x02, 0x00, 0x00, 0xff,
	0xff, 0xfa, 0x57, 0x20, 0x9c, 0x67, 0x01, 0x00, 0x00,
}
